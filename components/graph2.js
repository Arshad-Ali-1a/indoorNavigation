import * as React from "react";
import { Button, View, Text, StyleSheet } from "react-native";
import Svg, { Rect, Ellipse, Path, Line } from "react-native-svg";
import SvgPanZoom, { SvgPanZoomElement } from "react-native-svg-pan-zoom";

import { Dijsktra, Node } from "../dijkstra";
import LinePath from "./linePath";
import store from "../redux/store";
import Point from "./point";
import { setResult } from "../redux/actions";

let adj_node = [
  [new Node(4, 77), new Node(1, 99)],
  [new Node(0, 99), new Node(4, 24), new Node(3, 31), new Node(2, 17)],
  [new Node(1, 17), new Node(3, 72)],
  [new Node(1, 31), new Node(2, 72), new Node(4, 10)],
  [new Node(0, 77), new Node(1, 24), new Node(3, 10)],
];
const total_nodes = 5;

const SvgComponent = (props) => {
  const handleCompute = () => {
    const starting_node = new Node(store.getState().source.id, 0);
    let res = Dijsktra(total_nodes, adj_node, starting_node);
    console.log(res);
    store.dispatch(setResult(res));
  };

  return (
    <View style={{ flex: 1, backgroundColor: "#1E1E1E" }}>
      <SvgPanZoom>
        <Svg viewBox="0 0 1250 480" fill="#1d1d1d" {...props}>
          <Rect width={1250} height={480} fill="#1E1E1E" />

          <Point cx={73.5} cy={59} rx={71.5} ry={59.5} id={0} />
          <Point cx={560.5} cy={59.5} rx={71.5} ry={59.5} id={1} />
          <Point cx={1140.5} cy={243.5} rx={76.5} ry={56.5} id={2} />
          <Point cx={554.5} cy={413.5} rx={71.5} ry={51.5} id={3} />
          <Point cx={73.5} cy={423} rx={73.5} ry={61} id={4} />

          <Path
            d="M1144.16 259V256.315L1154.24 245.278C1155.43 243.986 1156.4 242.862 1157.17 241.908C1157.93 240.943 1158.5 240.038 1158.87 239.193C1159.25 238.338 1159.43 237.443 1159.43 236.509C1159.43 235.435 1159.18 234.505 1158.66 233.719C1158.15 232.934 1157.46 232.327 1156.57 231.9C1155.69 231.472 1154.69 231.259 1153.59 231.259C1152.41 231.259 1151.39 231.502 1150.52 231.989C1149.65 232.467 1148.98 233.138 1148.5 234.003C1148.03 234.868 1147.8 235.882 1147.8 237.045H1144.28C1144.28 235.256 1144.69 233.685 1145.52 232.332C1146.34 230.98 1147.47 229.926 1148.89 229.17C1150.32 228.415 1151.93 228.037 1153.71 228.037C1155.5 228.037 1157.08 228.415 1158.47 229.17C1159.85 229.926 1160.93 230.945 1161.72 232.228C1162.5 233.511 1162.89 234.938 1162.89 236.509C1162.89 237.632 1162.69 238.731 1162.28 239.805C1161.89 240.869 1161.19 242.057 1160.2 243.369C1159.21 244.672 1157.84 246.263 1156.09 248.142L1149.23 255.48V255.719H1163.43V259H1144.16Z"
            fill="#0E0D0D"
          />
          <Path
            d="M61.446 422.736V419.693L74.8693 398.455H77.0767V403.168H75.5852L65.4432 419.216V419.455H83.5199V422.736H61.446ZM75.8239 429V421.811V420.394V398.455H79.3438V429H75.8239Z"
            fill="#0E0D0D"
          />
          <Path
            d="M541.483 429.418C539.514 429.418 537.759 429.08 536.218 428.403C534.687 427.727 533.469 426.788 532.564 425.585C531.669 424.371 531.182 422.964 531.102 421.364H534.861C534.94 422.348 535.278 423.198 535.875 423.914C536.472 424.62 537.252 425.167 538.217 425.555C539.181 425.942 540.25 426.136 541.423 426.136C542.736 426.136 543.899 425.908 544.913 425.45C545.928 424.993 546.723 424.357 547.3 423.541C547.876 422.726 548.165 421.781 548.165 420.707C548.165 419.584 547.886 418.594 547.33 417.739C546.773 416.874 545.957 416.198 544.884 415.711C543.81 415.224 542.497 414.98 540.946 414.98H538.5V411.699H540.946C542.159 411.699 543.223 411.48 544.138 411.043C545.063 410.605 545.783 409.989 546.3 409.193C546.827 408.398 547.091 407.463 547.091 406.389C547.091 405.355 546.862 404.455 546.405 403.69C545.947 402.924 545.301 402.327 544.466 401.9C543.641 401.472 542.666 401.259 541.543 401.259C540.489 401.259 539.494 401.452 538.56 401.84C537.635 402.218 536.879 402.77 536.293 403.496C535.706 404.212 535.388 405.077 535.338 406.091H531.759C531.818 404.49 532.3 403.088 533.205 401.885C534.11 400.672 535.293 399.727 536.755 399.051C538.227 398.375 539.842 398.037 541.602 398.037C543.491 398.037 545.112 398.42 546.464 399.185C547.817 399.941 548.856 400.94 549.582 402.183C550.308 403.426 550.67 404.768 550.67 406.21C550.67 407.93 550.218 409.397 549.313 410.61C548.418 411.823 547.2 412.663 545.659 413.131V413.369C547.588 413.687 549.094 414.508 550.178 415.83C551.262 417.143 551.804 418.768 551.804 420.707C551.804 422.368 551.352 423.859 550.447 425.182C549.552 426.494 548.329 427.528 546.778 428.284C545.227 429.04 543.462 429.418 541.483 429.418Z"
            fill="#0E0D0D"
          />
          <Path
            d="M86.125 100.418C83.8778 100.418 81.9638 99.8061 80.3828 98.5831C78.8018 97.3501 77.5938 95.5653 76.7585 93.2287C75.9233 90.8821 75.5057 88.0483 75.5057 84.7273C75.5057 81.4261 75.9233 78.6072 76.7585 76.2706C77.6037 73.924 78.8168 72.1342 80.3977 70.9013C81.9886 69.6584 83.8977 69.0369 86.125 69.0369C88.3523 69.0369 90.2564 69.6584 91.8374 70.9013C93.4283 72.1342 94.6413 73.924 95.4766 76.2706C96.3217 78.6072 96.7443 81.4261 96.7443 84.7273C96.7443 88.0483 96.3267 90.8821 95.4915 93.2287C94.6562 95.5653 93.4482 97.3501 91.8672 98.5831C90.2862 99.8061 88.3722 100.418 86.125 100.418ZM86.125 97.1364C88.3523 97.1364 90.0824 96.0625 91.3153 93.9148C92.5483 91.767 93.1648 88.7045 93.1648 84.7273C93.1648 82.0824 92.8814 79.8303 92.3146 77.9709C91.7578 76.1115 90.9524 74.6946 89.8984 73.7202C88.8544 72.7457 87.5966 72.2585 86.125 72.2585C83.9176 72.2585 82.1925 73.3473 80.9496 75.5249C79.7067 77.6925 79.0852 80.7599 79.0852 84.7273C79.0852 87.3722 79.3636 89.6193 79.9205 91.4688C80.4773 93.3182 81.2777 94.7251 82.3217 95.6896C83.3757 96.6541 84.6435 97.1364 86.125 97.1364Z"
            fill="#0E0D0D"
          />
          <Path
            d="M554.901 53.4545V84H551.202V57.3324H551.023L543.565 62.2841V58.5256L551.202 53.4545H554.901Z"
            fill="#0E0D0D"
          />
          <LinePath
            x1={79.5}
            y1={119}
            x2={79.5}
            y2={362}
            // stroke="white"
            id={"0-4"}
          />
          <LinePath
            x1={95.7535}
            y1={381.818}
            x2={523.753}
            y2={87.818}
            id={"1-4"}
          />
          <LinePath
            x1={138.743}
            y1={63.5044}
            x2={488.743}
            y2={51.5044}
            id={"0-1"}
          />
          <LinePath
            x1={553.502}
            y1={362.179}
            x2={547.502}
            y2={110.179}
            id={"1-3"}
          />
          <LinePath
            x1={623.498}
            y1={406.93}
            x2={1061.5}
            y2={251.93}
            id={"2-3"}
          />
          <LinePath
            x1={628.386}
            y1={63.8898}
            x2={1066.39}
            y2={210.89}
            id={"1-2"}
          />
          <LinePath
            x1={138.871}
            y1={421.501}
            x2={488.871}
            y2={415.501}
            id={"3-4"}
          />
        </Svg>
      </SvgPanZoom>

      <Button title={"Compute"} onPress={handleCompute} />
    </View>
  );
};

// const mapStateToProps = (state) => ({
//     source: state.source,
//     result: state.result,
// })

export default SvgComponent;
